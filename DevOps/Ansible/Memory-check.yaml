---
 - hosts: all
   become: yes
   tasks:
     - name: Getting memory details of client
       shell:
         " free | grep -i mem "
       register: mem_info

     - name: Displaying memory info
       debug:
         msg: "{{ mem_info['stdout_lines'] }}"

     - name: Removing the spaces
       set_fact:
         space_rem: "{{ mem_info['stdout_lines'][0].strip().split(' ')|reject('match','^$') }}"

     - name: Display after removing spaces
       debug:
         msg: "{{ space_rem }}"

     - name: Saving details of Total, Used, Free, Shared, Cache, Available memory details
       set_fact:
         tot_mem: "{{ space_rem[1] }}"
         used_mem: "{{ space_rem[2] }}"
         free_mem: "{{ space_rem[3] }}"
         shared_mem: "{{ space_rem[4] }}"
         cache_mem: "{{ space_rem[5] }}"
         avai_mem: "{{ space_rem[6] }}"

     - name: Displaying details of Total, Used, Free, Shared, Cache and available memory details
       debug:
         msg: "Total memory is {{ tot_mem }} KB, Used memory is {{ used_mem }} KB, Free memory is {{ free_mem }} KB, Shared memory is {{ shared_mem }} KB, Cache memory is {{ cache_mem }} KB Available memory is {{ avai_mem }} KB"

     - name: Checking memory used %
       set_fact:
         percent: "{{ ((used_mem|float / tot_mem|float) * 100) | round (0) }}"


     - name: Displaying memory used percentage
       debug:
         msg: "Memory consuption is {{ percent|int }}% "

     - name: Getting the threshold for memory usage
       pause:
         prompt: "Enter the threshold"
       register: thr

     - name: Displaying threshold
       debug:
         msg: "User entered threshold is {{ thr['user_input'] }}% and Actual memory usage is {{ percent|int }}% "

     - name: Display when memory usage is below threshold
       debug:
         msg: "Memory usage below threshold so no action needed"
       when:
         - percent|int < thr['user_input']|int

     - name: Getting top 10 process when memory exceeds threshold
       shell:
         "ps axo '%cpu,%mem,pid,user,command' | sort -k1 -nr | head"
       register: top10proc
       when:
         - percent|int > thr['user_input']|int

     - name: Display top 10 process
       debug:
         #msg: "Entered threshold is above limit so displaying the top 10 process"
         msg: "{{ top10proc['stdout_lines'] }}"
       when:
           - top10proc is defined