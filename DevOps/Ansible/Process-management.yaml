---
 - hosts: all
   become: yes
   ignore_errors: yes
   vars:
     sername: ['sshd','crond','httpd']
     running_service: []
     stopped_service: []
   tasks:
     - name: Checking the service status
       shell:
         "service {{ item }} status"
       with_items:
           - "{{ sername }}"
       register: comp_serv_details

     - name: Displaying service details
       debug:
         msg: "{{ comp_serv_details }}"      

     - name: Capturing all service command output
       set_fact:
           ser_all_deta: "{{ comp_serv_details['results'] }}"


     - name: Displaying each servcie details
       debug:
         msg: 
          - "{{ item }}"
          - "=============================================="
       with_items:
            - "{{ ser_all_deta }}"


     - name: Capturing Running service details
       debug:
          msg: "service {{ item.item }} is running"
       when:
         - item.rc == 0
       with_items:
            - "{{ ser_all_deta }}"

     - name: Capturing Running service details
       debug:
          msg: "service {{ item.item }} is not running"     
       when:
         - item.rc != 0
       with_items:
            - "{{ ser_all_deta }}"               
                 
             
     - name: Capturing running service
       set_fact:
          running_service: "{{ running_service +[item.item] }}"
       when:
         - item.rc == 0
       with_items:
         - "{{ ser_all_deta }}"

     - name: Dsplaing running service names
       debug:
          msg:
           - "Below are running services details"       
           - "{{ running_service }}"       



     - name: Capturing running service
       set_fact:
          stopped_service: "{{ stopped_service +[item.item] }}"
       when:
         - item.rc != 0
       with_items:
         - "{{ ser_all_deta }}"

     - name: Dsplaing running service names
       debug:
          msg:
          - "Below are stopped services details"        
          - "{{ stopped_service }}"
          


     - name: Enter yes to start  stopped service
       pause:
          prompt: "Enter yes to start"
       register: useropt

     - name: starteing stopped services
       service:
          name: "{{ item }}"
          state: started
       with_items:
           - "{{ stopped_service }}"
       when:
         - useropt['user_input'] == "yes"


     - name: Not starting service since user not coformed
       debug:
          msg: "User not confired to start the stopped services {{ stopped_service }}"
       when:
          - useropt['user_input'] != "yes"        


     - name: Captring service details post starting
       shell:
          "service {{ item }} status"
       with_items:
            - "{{ stopped_service }}"      
       register: start_stopped_service

     - name: displaying service details
       debug:
          msg: "{{ start_stopped_service }}"